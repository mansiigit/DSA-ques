#include <iostream>
using namespace std;
void sort(int arr[],int s,int e){
  int mid=s+(e-s)/2;
  int lenLeft=mid-s+1;
  int lenRight=e-mid;


  int *left=new int[lenLeft];
  int *right=new int[lenRight];
  
  int k=s;
  for(int i=0;i<lenLeft;i++)
  {
    left[i]=arr[k];
    k++;
  
  }
  k=mid+1;
  for(int i=0;i<lenRight;i++)
  {
    right[i]=arr[k];
    k++;
  }
  


  int leftIndex=0;
  int rightIndex=0;
  int realIndex=s;
  while(leftIndex<lenLeft && rightIndex<lenRight)
  {
    if(left[leftIndex]<right[rightIndex]){
      arr[realIndex]=left[leftIndex];
        realIndex++;
      leftIndex++;
    
    }
  else{
  right[rightIndex]<left[leftIndex];
      arr[realIndex]=right[rightIndex];
      realIndex++;
      rightIndex++;
      
    }
  }

  while(rightIndex<lenRight){
    arr[realIndex]=right[rightIndex];
    realIndex++;
    rightIndex++;

  }
  while(leftIndex<lenLeft){
    arr[realIndex]=left[leftIndex];
    realIndex++;
    leftIndex++;
  }

  delete[] left;
  delete[] right;

}


void mergesort(int arr[],int s,int e ){
  if(s>=e){
    return;
  }
  int mid=s+(e-s)/2;
  sort(arr,s,mid);
  sort(arr,mid+1,e);
  sort(arr,s,e);
}
int main(){
  int arr[]={1,5,4,3,7};
  int size=5;
  int s=0;
  int e=size-1;
  cout<<"before"<<endl;
  for(int i=0;i<size;i++)
  {
    cout<<arr[i]<<endl;
  }
 mergesort(arr,s,e);
  cout<<"after"<<endl;
  for(int i=0;i<size;i++){
    cout<<arr[i]<<endl;
  }
  
}